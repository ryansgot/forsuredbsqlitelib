buildscript {
    repositories {
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.3.1'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group 'com.fsryan.forsuredb'
version '0.0.3'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

repositories {
    jcenter()
    mavenLocal()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.google.guava:guava:19.0'
    compile 'com.google.code.gson:gson:2.5'

    compile 'com.fsryan:forsuredbcompiler:0.5.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

String bintrayUserCredential = hasProperty('bintrayUser') ? getProperty('bintrayUser') : ''
String bintrayApiKeyCredential = hasProperty('bintrayApiKey') ? getProperty('bintrayApiKey') : ''

bintray {
    user = bintrayUserCredential
    key = bintrayApiKeyCredential

    publications = ['forsuredbsqlitelibPublication']
    pkg {
        repo = 'maven'
        name = 'sqlitelib'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/ryansgot/forsuredbsqlitelib.git'
        publicDownloadNumbers = true
        version {
            name = '0.0.3'
            desc = 'SQLite query generators for forsuredb project'
            released  = new Date()
            vcsTag = 'v0.0.3'
        }
    }
}

publishing {
    publications {
        forsuredbsqlitelibPublication(MavenPublication) {
            from components.java
            groupId = 'com.fsryan.forsuredb'
            artifactId = 'sqlitelib'
            version = '0.0.3'

            artifact sourcesJar
            artifact javadocJar
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    //options.encoding = 'UTF-8'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task release(dependsOn: bintrayUpload) {
    doLast {
        println("Huzzah! sqlitelib was uploaded to bintray!")
    }
}
